"use strict";(self.webpackChunkokda_networks=self.webpackChunkokda_networks||[]).push([[451],{562:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>f,frontMatter:()=>l,metadata:()=>d,toc:()=>u});var t=i(4848),r=i(8453),s=i(1470),o=i(9365);const l={sidebar_position:2,sidebar_label:"VRFs",title:"Linux VRF Configuration"},a="Linux VRF Configuration",d={id:"linux-networking/vrf",title:"Linux VRF Configuration",description:"Linux VRF allows for Layer 3 network segregation by creating multiple routing and",source:"@site/docs/2-linux-networking/3-vrf.md",sourceDirName:"2-linux-networking",slug:"/linux-networking/vrf",permalink:"/linux-networking/vrf",draft:!1,unlisted:!1,editUrl:"https://github.com/okda-networks/docs_source/tree/main/docs/2-linux-networking/3-vrf.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"VRFs",title:"Linux VRF Configuration"},sidebar:"tutorialSidebar",previous:{title:"VLANs",permalink:"/linux-networking/Vlans"}},c={},u=[{value:"Basic VRF configuration",id:"basic-vrf-configuration",level:2},{value:"Topology",id:"topology",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Verify",id:"verify",level:3},{value:"VRF with VLANs",id:"vrf-with-vlans",level:2},{value:"Topology",id:"topology-1",level:3},{value:"Configuration",id:"configuration-1",level:3},{value:"Verify",id:"verify-1",level:3},{value:"VRF with MPLS",id:"vrf-with-mpls",level:2},{value:"Topology",id:"topology-2",level:3},{value:"Configuration",id:"configuration-2",level:3},{value:"Verify",id:"verify-2",level:3}];function p(n){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"linux-vrf-configuration",children:"Linux VRF Configuration"}),"\n",(0,t.jsx)(e.p,{children:"Linux VRF allows for Layer 3 network segregation by creating multiple routing and\nforwarding domains. Each domain has its own dedicated routing table,\nwith network links assigned to specific domains."}),"\n",(0,t.jsx)(e.admonition,{type:"note",children:(0,t.jsx)(e.p,{children:"VRF in Linux does not provide complete network stack isolation, as network namespaces do; it only separates route and FIB lookups."})}),"\n",(0,t.jsx)(e.p,{children:"In this document, we will cover VRF configuration for the following use cases:"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"Basic VRF configuration to create multiple routing domain on same router."}),"\n",(0,t.jsx)(e.li,{children:"VRF configuration with VLANs."}),"\n",(0,t.jsx)(e.li,{children:"VRF configuration with MPLS."}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"basic-vrf-configuration",children:"Basic VRF configuration"}),"\n",(0,t.jsx)(e.h3,{id:"topology",children:"Topology"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"topology1",src:i(6623).A+"",width:"728",height:"463"})}),"\n",(0,t.jsx)(e.h3,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsxs)(e.p,{children:["We will create two VRFs ",(0,t.jsx)(e.code,{children:"vrf10"})," and ",(0,t.jsx)(e.code,{children:"vrf20"}),", ",(0,t.jsx)(e.code,{children:"PC1"})," and ",(0,t.jsx)(e.code,{children:"PC2"})," will be in ",(0,t.jsx)(e.code,{children:"vrf10"})," while ",(0,t.jsx)(e.code,{children:"PC3"})," in ",(0,t.jsx)(e.code,{children:"vrf20"}),".\nthen we should have routing isolation between pcs in ",(0,t.jsx)(e.code,{children:"vrf10"})," and ",(0,t.jsx)(e.code,{children:"vrf20"}),"."]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["Create ",(0,t.jsx)(e.code,{children:"vrf10"})," and ",(0,t.jsx)(e.code,{children:"vrf20"}),"."]}),"\n",(0,t.jsxs)(e.li,{children:["Add ",(0,t.jsx)(e.code,{children:"enp0s10"})," and ",(0,t.jsx)(e.code,{children:"enp0s11"})," to ",(0,t.jsx)(e.code,{children:"vrf10"}),", and ",(0,t.jsx)(e.code,{children:"enp0s12"})," to ",(0,t.jsx)(e.code,{children:"vrf20"}),"."]}),"\n"]}),"\n",(0,t.jsx)(e.admonition,{type:"note",children:(0,t.jsxs)(e.p,{children:["When the VRFs are configured, processes can do socket binding to the VRF device using ",(0,t.jsx)(e.code,{children:"SO_BINDTODEVICE"})," option to source\ntraffic from that VRF."]})}),"\n","\n",(0,t.jsxs)(s.A,{children:[(0,t.jsx)(o.A,{value:"onmcli",label:"ONM-CLI",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"dent-1(config)# links-iproute2 \ndent-1(config-links-iproute2)# vrf vrf10\ndent-1(config-vrf[name='vrf10'])# admin-status up \ndent-1(config-vrf[name='vrf10'])# vrf-info table 10\ndent-1(config-vrf[name='vrf10'])# exit\ndent-1(config-links-iproute2)# vrf vrf20 \ndent-1(config-vrf[name='vrf20'])# admin-status up\ndent-1(config-vrf[name='vrf20'])# vrf-info table 20\ndent-1(config-vrf[name='vrf20'])# exit\ndent-1(config-links-iproute2)# link enp0s10\ndent-1(config-[name='enp0s10'])# admin-status up \ndent-1(config-[name='enp0s10'])# master vrf10\ndent-1(config-[name='enp0s10'])# ip 192.168.9.11/24\ndent-1(config-[name='enp0s10'])# exit\ndent-1(config-links-iproute2)# link enp0s11\ndent-1(config-[name='enp0s11'])# admin-status up \ndent-1(config-[name='enp0s11'])# master vrf20\ndent-1(config-[name='enp0s11'])# ip 192.168.10.11/24\ndent-1(config-[name='enp0s11'])# exit\ndent-1(config-links-iproute2)# link enp0s12\ndent-1(config-[name='enp0s12'])# admin-status up\ndent-1(config-[name='enp0s12'])# master vrf20\ndent-1(config-[name='enp0s12'])# ip 192.168.11.11/24\ndent-1(config-[name='enp0s12'])# commit\n"})})}),(0,t.jsx)(o.A,{value:"iproute2",label:"IPROUTE2",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"ip link add name vrf10 mtu 1500 up group 0 type vrf table 10 \nip link add name vrf20 mtu 1500 up group 0 type vrf table 20 \nip link set name enp0s10 master vrf10\nip address add 192.168.9.11/24 dev enp0s10 \nip link set name enp0s11 master vrf20 \nip address add 192.168.10.11/24 dev enp0s11 \nip link set name enp0s12 master vrf20 \nip address add 192.168.11.11/24 dev enp0s12\n"})})}),(0,t.jsx)(o.A,{value:"netconf",label:"NETCONF",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-xml",children:'<links xmlns="urn:okda:iproute2:ip:link" xmlns:yang="urn:ietf:params:xml:ns:yang:1">\n    <vrf>\n        <name>vrf10</name>\n        <admin-status>up</admin-status>\n        <vrf-info>\n            <table>10</table>\n        </vrf-info>\n    </vrf>\n    <vrf>\n        <name>vrf20</name>\n        <admin-status>up</admin-status>\n        <vrf-info>\n            <table>20</table>\n        </vrf-info>\n    </vrf>\n    <link>\n        <name>enp0s10</name>\n        <master>vrf10</master>\n        <ip>\n            <address>192.168.9.11/24</address>\n        </ip>\n    </link>\n    <link>\n        <name>enp0s11</name>\n        <master>vrf20</master>\n        <ip>\n            <address>192.168.10.11/24</address>\n        </ip>\n    </link>\n    <link>\n        <name>enp0s12</name>\n        <master>vrf20</master>\n        <ip>\n            <address>192.168.11.11/24</address>\n        </ip>\n    </link>\n</links>\n'})})})]}),"\n",(0,t.jsx)(e.h3,{id:"verify",children:"Verify"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"By examining the routing tables, we can see that each VRF has its own table,\nand the assigned link is added as a connected route to its respective table."}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"root@dent-1:~# ip route show table 10\n192.168.9.0/24 dev enp0s10 proto kernel scope link src 192.168.9.11 \nlocal 192.168.9.11 dev enp0s10 proto kernel scope host src 192.168.9.11 \n\n\nroot@dent-1:~# ip route show table 20\n192.168.10.0/24 dev enp0s11 proto kernel scope link src 192.168.10.11 \nlocal 192.168.10.11 dev enp0s11 proto kernel scope host src 192.168.10.11 \n192.168.11.0/24 dev enp0s12 proto kernel scope link src 192.168.11.11 \nlocal 192.168.11.11 dev enp0s12 proto kernel scope host src 192.168.11.11 \n"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"We can see that pings from PC2 to PC3 work (same VRF), while pings from PC2 to PC1 fail (different VRFs)."}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"PC2> ping 192.168.11.1\nPING 192.168.11.1 (192.168.11.1) 56(84) bytes of data.\n64 bytes from 192.168.11.1: icmp_seq=1 ttl=63 time=0.594 ms\n64 bytes from 192.168.11.1: icmp_seq=2 ttl=63 time=1.52 ms\n64 bytes from 192.168.11.1: icmp_seq=3 ttl=63 time=1.54 ms\n64 bytes from 192.168.11.1: icmp_seq=4 ttl=63 time=1.61 ms\n64 bytes from 192.168.11.1: icmp_seq=5 ttl=63 time=0.811 ms\n--- 192.168.11.1 ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4016ms\nrtt min/avg/max/mdev = 0.594/1.214/1.608/0.424 ms\n\nPC2>  ping 192.168.9.1\nPING 192.168.9.1 (192.168.9.1) 56(84) bytes of data.\n--- 192.168.9.1 ping statistics ---\n5 packets transmitted, 0 received, 100% packet loss, time 4094ms\n\n"})}),"\n",(0,t.jsxs)(e.admonition,{type:"tip",children:[(0,t.jsxs)(e.p,{children:["To allow access between different VRFs, we can use ",(0,t.jsx)(e.code,{children:"ip rule"})," to match the source and destination,\nsetting the specific routing table to be used for that traffic."]}),(0,t.jsxs)(s.A,{children:[(0,t.jsx)(o.A,{value:"onmcli",label:"ONM-CLI",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"dent-1(config)# rules-iproute2 \ndent-1(config-rules-iproute2)# rule 200 to 192.168.10.1/32\ndent-1(config-[pref='200'][to='192.168.10.1/32']# action table 20\ndent-1(config-[pref='200'][to='192.168.10.1/32']# exit\ndent-1(config-rules-iproute2)# rule 201 to 192.168.9.1/32 \ndent-1(config-[pref='201'][to='192.168.9.1/32']# action table 10\ndent-1(config-[pref='201'][to='192.168.9.1/32']# commit \n"})})}),(0,t.jsx)(o.A,{value:"iproute2",label:"IPROUTE2",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"ip rule add pref 200 to 192.168.10.1/32 table 20 \nip rule add pref 201 to 192.168.9.1/32 table 10 \n"})})}),(0,t.jsx)(o.A,{value:"netconf",label:"NETCONF",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-xml",children:'<rules xmlns="urn:okda:iproute2:ip:rule" xmlns:yang="urn:ietf:params:xml:ns:yang:1">\n    <rule>\n        <pref>200</pref>\n        <from>0.0.0.0/0</from>\n        <to>192.168.10.1/32</to>\n        <tos>default</tos>\n        <fwmark>0x00</fwmark>\n        <action>\n            <table>20</table>\n        </action>\n    </rule>\n    <rule>\n        <pref>201</pref>\n        <from>0.0.0.0/0</from>\n        <to>192.168.9.1/32</to>\n        <tos>default</tos>\n        <fwmark>0x00</fwmark>\n        <action>\n            <table>10</table>\n        </action>\n    </rule>\n</rules>\n'})})})]}),(0,t.jsxs)(e.p,{children:["Now ",(0,t.jsx)(e.code,{children:"PC1"})," and ",(0,t.jsx)(e.code,{children:"PC2"})," should be able to ping each other."]}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"PC2> ping 192.168.9.1\nPING 192.168.9.1 (192.168.9.1) 56(84) bytes of data.\n64 bytes from 192.168.9.1: icmp_seq=1 ttl=63 time=1.15 ms\n64 bytes from 192.168.9.1: icmp_seq=2 ttl=63 time=1.69 ms\n64 bytes from 192.168.9.1: icmp_seq=3 ttl=63 time=1.90 ms\n"})})]}),"\n",(0,t.jsx)(e.h2,{id:"vrf-with-vlans",children:"VRF with VLANs"}),"\n",(0,t.jsxs)(e.p,{children:["Just as we can achieve routing isolation by assigning Layer 3 links to specific VRFs,\nwe can also assign VLANs to specific VRFs.\nFor instance,",(0,t.jsx)(e.code,{children:"VLAN10"})," and ",(0,t.jsx)(e.code,{children:"VLAN20"})," can be added to ",(0,t.jsx)(e.code,{children:"VRFx"})," while ",(0,t.jsx)(e.code,{children:"VLAN30"})," and ",(0,t.jsx)(e.code,{children:"VLAN40"})," can be added to ",(0,t.jsx)(e.code,{children:"VRFy"}),"."]}),"\n",(0,t.jsx)(e.h3,{id:"topology-1",children:"Topology"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"topology2",src:i(6842).A+"",width:"866",height:"587"})}),"\n",(0,t.jsx)(e.h3,{id:"configuration-1",children:"Configuration"}),"\n",(0,t.jsxs)(e.p,{children:["The requirement here is to have ",(0,t.jsx)(e.code,{children:"PC4"})," be part of ",(0,t.jsx)(e.code,{children:"VRF10"}),",\nallowing it to ping ",(0,t.jsx)(e.code,{children:"PC1"})," (",(0,t.jsx)(e.code,{children:"VRF10"}),") but not ",(0,t.jsx)(e.code,{children:"PC2"})," and ",(0,t.jsx)(e.code,{children:"PC3"})," (",(0,t.jsx)(e.code,{children:"VRF20"}),")."]}),"\n",(0,t.jsx)(e.p,{children:"To achieve this, apply the following configurations:"}),"\n",(0,t.jsxs)(e.p,{children:["On ",(0,t.jsx)(e.code,{children:"dent-2"}),":"]}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["Create bridge ",(0,t.jsx)(e.code,{children:"br1"})," with ",(0,t.jsx)(e.code,{children:"vlan_filtering"})," enabled."]}),"\n",(0,t.jsxs)(e.li,{children:["Add ",(0,t.jsx)(e.code,{children:"enp0s11"})," to ",(0,t.jsx)(e.code,{children:"br1"})," and add ",(0,t.jsx)(e.code,{children:"VLAN10"})," to it with ",(0,t.jsx)(e.code,{children:"PVID"})," and ",(0,t.jsx)(e.code,{children:"untagged"})," set (access port)."]}),"\n",(0,t.jsxs)(e.li,{children:["Add ",(0,t.jsx)(e.code,{children:"enp0s4"})," to ",(0,t.jsx)(e.code,{children:"br1"})," and add ",(0,t.jsx)(e.code,{children:"VLAN10"})," to it without ",(0,t.jsx)(e.code,{children:"PVID"})," and ",(0,t.jsx)(e.code,{children:"untagged"})," set (trunk port)."]}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["On ",(0,t.jsx)(e.code,{children:"dent-1"}),":"]}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["Create bridge ",(0,t.jsx)(e.code,{children:"br1"})," with ",(0,t.jsx)(e.code,{children:"vlan_filtering"})," enabled."]}),"\n",(0,t.jsxs)(e.li,{children:["Add ",(0,t.jsx)(e.code,{children:"enp0s4"})," to ",(0,t.jsx)(e.code,{children:"br1"})," and configure ",(0,t.jsx)(e.code,{children:"VLAN10"})," without ",(0,t.jsx)(e.code,{children:"PVID"})," and ",(0,t.jsx)(e.code,{children:"untagged"})," set (trunk port)."]}),"\n",(0,t.jsxs)(e.li,{children:["Create vlan interface ",(0,t.jsx)(e.code,{children:"br1.10"})," and add it to ",(0,t.jsx)(e.code,{children:"VRF10"}),"."]}),"\n",(0,t.jsxs)(e.li,{children:["Add ",(0,t.jsx)(e.code,{children:"VLAN"})," id 10 to ",(0,t.jsx)(e.code,{children:"br1"})," with ",(0,t.jsx)(e.code,{children:"self"})," option set."]}),"\n",(0,t.jsxs)(e.li,{children:["On ",(0,t.jsx)(e.code,{children:"PC4"}),", set ",(0,t.jsx)(e.code,{children:"br1.10"})," ip as default gateway."]}),"\n"]}),"\n",(0,t.jsx)(e.admonition,{type:"note",children:(0,t.jsxs)(e.p,{children:["For more details about ",(0,t.jsx)(e.code,{children:"VLAN"})," configuration please check ",(0,t.jsx)(e.a,{href:"/linux-networking/Vlans",children:"VLANs Guide"}),"."]})}),"\n",(0,t.jsxs)(s.A,{children:[(0,t.jsx)(o.A,{value:"onmcli",label:"ONM-CLI",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"dent-1# conf t\ndent-1(config)# links-iproute2 \ndent-1(config-links-iproute2)# bridge br1\ndent-1(config-bridge[name='br1'])# admin-status up \ndent-1(config-bridge[name='br1'])# br-info stp_state 1\ndent-1(config-bridge[name='br1'])# br-info vlan_filtering 1\ndent-1(config-bridge[name='br1'])# bridge-conf vlan 10\ndent-1(config-vlan[vid='10'])# self true\ndent-1(config-vlan[vid='10'])# exit\ndent-1(config-bridge[name='br1'])# exit\ndent-1(config-links-iproute2)# link enp0s4\ndent-1(config-[name='enp0s4'])# admin-status up \ndent-1(config-[name='enp0s4'])# master br1 \ndent-1(config-[name='enp0s4'])# bridge-conf vlan 10\ndent-1(config-vlan[vid='10'])# exit\ndent-1(config-links-iproute2)# vlan br1.10\ndent-1(config-[name='br1.10'])# device br1 \ndent-1(config-[name='br1.10'])# master vrf10\ndent-1(config-[name='br1.10'])# vlan-info id 10\ndent-1(config-[name='br1.10'])# admin-status up\ndent-1(config-[name='br1.10'])# ip 192.168.8.11/24\ndent-1(config-[name='br1.10'])# commit \n"})})}),(0,t.jsx)(o.A,{value:"iproute2",label:"IPROUTE2",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"ip link add name br1 mtu 1500 up type bridge stp_state 1 vlan_filtering 1 \nbridge vlan add vid 10 dev br1 self \nip link set name enp0s4 up master br1 \nip link add name br1.10 link br1 master vrf10 up type vlan id 10 \nip address add 192.168.8.11/24 dev br1.10 \n"})})}),(0,t.jsx)(o.A,{value:"netconf",label:"NETCONF",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-xml",children:'<links xmlns="urn:okda:iproute2:ip:link" xmlns:yang="urn:ietf:params:xml:ns:yang:1">\n    <link>\n        <name>enp0s4</name>\n        <admin-status>up</admin-status>\n        <master>br1</master>\n        <bridge-conf>\n            <vlan>\n                <vid>10</vid>\n            </vlan>\n        </bridge-conf>\n    </link>\n    <bridge>\n        <name>br1</name>\n        <admin-status>up</admin-status>\n        <br-info>\n            <stp_state>1</stp_state>\n            <vlan_filtering>1</vlan_filtering>\n        </br-info>\n        <bridge-conf>\n            <vlan>\n                <vid>10</vid>\n                <self>true</self>\n            </vlan>\n        </bridge-conf>\n    </bridge>\n    <vlan>\n        <name>br1.10</name>\n        <admin-status>up</admin-status>\n        <master>vrf10</master>\n        <device>br1</device>\n        <ip>\n            <address>192.168.8.11/24</address>\n        </ip>\n        <vlan-info>\n            <id>10</id>\n        </vlan-info>\n    </vlan>\n</links>\n'})})})]}),"\n",(0,t.jsx)(e.h3,{id:"verify-1",children:"Verify"}),"\n",(0,t.jsxs)(e.p,{children:["Now ",(0,t.jsx)(e.code,{children:"PC4"})," can ping ",(0,t.jsx)(e.code,{children:"PC1"})," but not ",(0,t.jsx)(e.code,{children:"PC2"})," or ",(0,t.jsx)(e.code,{children:"PC3"}),"."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-angular2html",children:"PC4> ping 192.168.9.1 \nPING 192.168.9.1 (192.168.9.1) 56(84) bytes of data.\n64 bytes from 192.168.9.1: icmp_seq=1 ttl=63 time=1.51 ms\n64 bytes from 192.168.9.1: icmp_seq=2 ttl=63 time=1.53 ms\n64 bytes from 192.168.9.1: icmp_seq=3 ttl=63 time=1.93 ms\n64 bytes from 192.168.9.1: icmp_seq=4 ttl=63 time=3.62 ms\n\n\nPC4> ping 192.168.10.1\nPING 192.168.10.1 (192.168.10.1) 56(84) bytes of data.\n--- 192.168.10.1 ping statistics ---\n4 packets transmitted, 0 received, 100% packet loss, time 1021ms\n"})}),"\n",(0,t.jsx)(e.h2,{id:"vrf-with-mpls",children:"VRF with MPLS"}),"\n",(0,t.jsxs)(e.p,{children:["We can utilize VRF and MPLS to establish a static L3VPN network.\nIn this example, we will configure ",(0,t.jsx)(e.code,{children:"dent-1"})," and ",(0,t.jsx)(e.code,{children:"dent-2"})," to create an L3VPN (",(0,t.jsx)(e.code,{children:"VRF10"}),")\nand use MPLS to tunnel traffic between ",(0,t.jsx)(e.code,{children:"dent-1"}),"'s ",(0,t.jsx)(e.code,{children:"VRF10"})," and ",(0,t.jsx)(e.code,{children:"dent-2"}),"'s ",(0,t.jsx)(e.code,{children:"VRF10"})," network."]}),"\n",(0,t.jsxs)(e.p,{children:["We'll focus on the configuration for ",(0,t.jsx)(e.code,{children:"dent-1"}),"; the configuration for ",(0,t.jsx)(e.code,{children:"dent-2"})," will\nbe identical except for the numbering."]}),"\n",(0,t.jsx)(e.h3,{id:"topology-2",children:"Topology"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"topology2",src:i(899).A+"",width:"832",height:"592"})}),"\n",(0,t.jsx)(e.h3,{id:"configuration-2",children:"Configuration"}),"\n",(0,t.jsxs)(e.admonition,{type:"note",children:[(0,t.jsx)(e.p,{children:"Before starting, ensure the following:"}),(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"The required Linux modules are installed:"}),"\n"]}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"root@dent-1:~# lsmod\nModule                  Size  Used by\nvrf                    36864  0\nmpls_gso               16384  0\nmpls_iptunnel          16384  1\nmpls_router            40960  1 mpls_iptunnel\n"})}),(0,t.jsxs)(e.ol,{start:"2",children:["\n",(0,t.jsx)(e.li,{children:"MPLS is enabled:"}),"\n"]}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"root@dent-1:~# sysctl net.mpls.platform_labels=100000\nroot@dent-1:~# sysctl net.mpls.conf.enp0s4.input=1\n"})})]}),"\n",(0,t.jsxs)(s.A,{children:[(0,t.jsx)(o.A,{value:"onmcli",label:"ONM-CLI",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"dent-1(config)# links-iproute2\ndent-1(config-links-iproute2)# vrf vrf10\ndent-1(config-vrf[name='vrf10'])# admin-status up\ndent-1(config-vrf[name='vrf10'])# vrf-info table 10\ndent-1(config-vrf[name='vrf10'])# exit\ndent-1(config-links-iproute2)# link enp0s10\ndent-1(config-[name='enp0s10'])# master vrf10\ndent-1(config-[name='enp0s10'])# admin-status up\ndent-1(config-[name='enp0s10'])# ip 192.168.9.11/24\ndent-1(config-[name='enp0s10'])# exit\ndent-1(config-links-iproute2)# link enp0s4\ndent-1(config-[name='enp0s4'])# admin-status up\ndent-1(config-[name='enp0s4'])# ip 172.16.1.11/24\ndent-1(config-[name='enp0s4'])# exit\ndent-1(config-links-iproute2)# exit\ndent-1(config)# routes-iproute2\ndent-1(config-routes-iproute2)# route 192.168.8.0/24 table 10\ndent-1(config-[prefix='192.168.8.0/24'][table='10'][metric='0'][tos='# nexthop enp0s4\ndent-1(config-nexthop[dev='enp0s4'])# encap mpls-encap label 10100\ndent-1(config-nexthop[dev='enp0s4'])# via address 172.16.1.11\ndent-1(config-nexthop[dev='enp0s4'])# exit\ndent-1(config-[prefix='192.168.8.0/24'][table='10'][metric='0'][tos='# exit\ndent-1(config-routes-iproute2)# mpls-route 10100\ndent-1(config-[label='10100'])# dev vrf10\ndent-1(config-[label='10100'])# commit\n"})})}),(0,t.jsx)(o.A,{value:"iproute2",label:"IPROUTE2",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"ip link add name vrf10 mtu 1500 up group 0 type vrf table 10\nip link set name enp0s4 up\nip address add 172.16.1.11/24 dev enp0s4\nip link set name enp0s10 up master vrf10\nip address add 182.168.8.11/24 dev enp0s10\nip route add 192.168.8.0/24 table 10 nexthop dev enp0s4 encap mpls 10100 via 172.16.1.11\nip -M route add 10100 dev vrf10\n"})})}),(0,t.jsx)(o.A,{value:"netconf",label:"NETCONF",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-xml",children:'\n<links xmlns="urn:okda:iproute2:ip:link" xmlns:yang="urn:ietf:params:xml:ns:yang:1">\n    <vrf>\n        <name>vrf10</name>\n        <admin-status>up</admin-status>\n        <vrf-info>\n            <table>10</table>\n        </vrf-info>\n    </vrf>\n    <link>\n        <name>enp0s4</name>\n        <admin-status>up</admin-status>\n        <ip>\n            <address>172.16.1.11/24</address>\n        </ip>\n    </link>\n    <link>\n        <name>enp0s10</name>\n        <admin-status>up</admin-status>\n        <master>vrf10</master>\n        <ip>\n            <address>182.168.8.11/24</address>\n        </ip>\n    </link>\n</links>\n<routes xmlns="urn:okda:iproute2:ip:route" xmlns:yang="urn:ietf:params:xml:ns:yang:1">\n    <route>\n        <prefix>192.168.8.0/24</prefix>\n        <table>10</table>\n        <metric>0</metric>\n        <tos>default</tos>\n        <nexthop>\n            <dev>enp0s4</dev>\n            <mpls-encap>\n                <label>10100</label>\n            </mpls-encap>\n            <via>\n                <address>172.16.1.11</address>\n            </via>\n        </nexthop>\n    </route>\n    <mpls-route>\n        <label>10100</label>\n        <dev>vrf10</dev>\n    </mpls-route>\n</routes>\n'})})})]}),"\n",(0,t.jsxs)(e.admonition,{type:"tip",children:[(0,t.jsxs)(e.p,{children:["As you can see, we are encapsulating the outgoing traffic with MPLS label ",(0,t.jsx)(e.code,{children:"10100"})," (PUSH)\nusing the command ",(0,t.jsx)(e.code,{children:"encap mpls-encap label 10100"}),". For incoming traffic with MPLS label ",(0,t.jsx)(e.code,{children:"10100"}),",\nwe use ",(0,t.jsx)(e.code,{children:"mpls-route"})," to direct it into ",(0,t.jsx)(e.code,{children:"VRF10"})," (POP) with the following commands:"]}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"dent-1(config-routes-iproute2)# mpls-route 10100\ndent-1(config-[label='10100'])# dev vrf10\ndent-1(config-[label='10100'])# commit\n"})})]}),"\n",(0,t.jsx)(e.h3,{id:"verify-2",children:"Verify"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["Now ",(0,t.jsx)(e.code,{children:"PC1"})," can ping ",(0,t.jsx)(e.code,{children:"PC4"})]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"PC1> ping 192.168.8.4\nPING 192.168.8.4 (192.168.8.4) 56(84) bytes of data.\n64 bytes from 192.168.8.4: icmp_seq=1 ttl=62 time=1.40 ms\n64 bytes from 192.168.8.4: icmp_seq=2 ttl=62 time=1.53 ms\n64 bytes from 192.168.8.4: icmp_seq=3 ttl=62 time=1.51 ms\n64 bytes from 192.168.8.4: icmp_seq=4 ttl=62 time=1.61 ms\n64 bytes from 192.168.8.4: icmp_seq=5 ttl=62 time=1.51 ms\n64 bytes from 192.168.8.4: icmp_seq=6 ttl=62 time=1.99 ms\n"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["In the following captures, we can observe that the traffic has the MPLS label ",(0,t.jsx)(e.code,{children:"10100"}),":\n",(0,t.jsx)(e.img,{alt:"capture",src:i(5729).A+"",width:"731",height:"366"})]}),"\n"]})]})}function f(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(p,{...n})}):p(n)}},9365:(n,e,i)=>{i.d(e,{A:()=>o});i(6540);var t=i(4164);const r={tabItem:"tabItem_Ymn6"};var s=i(4848);function o(n){let{children:e,hidden:i,className:o}=n;return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.A)(r.tabItem,o),hidden:i,children:e})}},1470:(n,e,i)=>{i.d(e,{A:()=>y});var t=i(6540),r=i(4164),s=i(3104),o=i(6347),l=i(205),a=i(7485),d=i(1682),c=i(679);function u(n){return t.Children.toArray(n).filter((n=>"\n"!==n)).map((n=>{if(!n||(0,t.isValidElement)(n)&&function(n){const{props:e}=n;return!!e&&"object"==typeof e&&"value"in e}(n))return n;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof n.type?n.type:n.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(n){const{values:e,children:i}=n;return(0,t.useMemo)((()=>{const n=e??function(n){return u(n).map((n=>{let{props:{value:e,label:i,attributes:t,default:r}}=n;return{value:e,label:i,attributes:t,default:r}}))}(i);return function(n){const e=(0,d.X)(n,((n,e)=>n.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((n=>n.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(n),n}),[e,i])}function f(n){let{value:e,tabValues:i}=n;return i.some((n=>n.value===e))}function m(n){let{queryString:e=!1,groupId:i}=n;const r=(0,o.W6)(),s=function(n){let{queryString:e=!1,groupId:i}=n;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return i??null}({queryString:e,groupId:i});return[(0,a.aZ)(s),(0,t.useCallback)((n=>{if(!s)return;const e=new URLSearchParams(r.location.search);e.set(s,n),r.replace({...r.location,search:e.toString()})}),[s,r])]}function h(n){const{defaultValue:e,queryString:i=!1,groupId:r}=n,s=p(n),[o,a]=(0,t.useState)((()=>function(n){let{defaultValue:e,tabValues:i}=n;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!f({value:e,tabValues:i}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${i.map((n=>n.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=i.find((n=>n.default))??i[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:e,tabValues:s}))),[d,u]=m({queryString:i,groupId:r}),[h,x]=function(n){let{groupId:e}=n;const i=function(n){return n?`docusaurus.tab.${n}`:null}(e),[r,s]=(0,c.Dv)(i);return[r,(0,t.useCallback)((n=>{i&&s.set(n)}),[i,s])]}({groupId:r}),g=(()=>{const n=d??h;return f({value:n,tabValues:s})?n:null})();(0,l.A)((()=>{g&&a(g)}),[g]);return{selectedValue:o,selectValue:(0,t.useCallback)((n=>{if(!f({value:n,tabValues:s}))throw new Error(`Can't select invalid tab value=${n}`);a(n),u(n),x(n)}),[u,x,s]),tabValues:s}}var x=i(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=i(4848);function b(n){let{className:e,block:i,selectedValue:t,selectValue:o,tabValues:l}=n;const a=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.a_)(),c=n=>{const e=n.currentTarget,i=a.indexOf(e),r=l[i].value;r!==t&&(d(e),o(r))},u=n=>{let e=null;switch(n.key){case"Enter":c(n);break;case"ArrowRight":{const i=a.indexOf(n.currentTarget)+1;e=a[i]??a[0];break}case"ArrowLeft":{const i=a.indexOf(n.currentTarget)-1;e=a[i]??a[a.length-1];break}}e?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":i},e),children:l.map((n=>{let{value:e,label:i,attributes:s}=n;return(0,v.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:n=>a.push(n),onKeyDown:u,onClick:c,...s,className:(0,r.A)("tabs__item",g.tabItem,s?.className,{"tabs__item--active":t===e}),children:i??e},e)}))})}function j(n){let{lazy:e,children:i,selectedValue:r}=n;const s=(Array.isArray(i)?i:[i]).filter(Boolean);if(e){const n=s.find((n=>n.props.value===r));return n?(0,t.cloneElement)(n,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:s.map(((n,e)=>(0,t.cloneElement)(n,{key:e,hidden:n.props.value!==r})))})}function k(n){const e=h(n);return(0,v.jsxs)("div",{className:(0,r.A)("tabs-container",g.tabList),children:[(0,v.jsx)(b,{...e,...n}),(0,v.jsx)(j,{...e,...n})]})}function y(n){const e=(0,x.A)();return(0,v.jsx)(k,{...n,children:u(n.children)},String(e))}},5729:(n,e,i)=>{i.d(e,{A:()=>t});const t=i.p+"assets/images/vrf-mpls-capture-3c475c667131e902f25458fdaea5f643.png"},899:(n,e,i)=>{i.d(e,{A:()=>t});const t=i.p+"assets/images/vrf-mpls-topo-9bebaf7ddded7aa474d3c4b797e5dd02.png"},6623:(n,e,i)=>{i.d(e,{A:()=>t});const t=i.p+"assets/images/vrf-topo1-13a94c182094963edfe56d69c1435ceb.png"},6842:(n,e,i)=>{i.d(e,{A:()=>t});const t=i.p+"assets/images/vrf-vlan-topo-acfc2f749b6a82004e878ed350fcaf2c.png"},8453:(n,e,i)=>{i.d(e,{R:()=>o,x:()=>l});var t=i(6540);const r={},s=t.createContext(r);function o(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);