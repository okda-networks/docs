"use strict";(self.webpackChunkokda_networks=self.webpackChunkokda_networks||[]).push([[827],{5889:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>g,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var a=i(4848),r=i(8453),t=i(1470),d=i(9365);const l={sidebar_position:2,sidebar_label:"VLANs",title:"Linux VLAN Configuration",image:"/img/topology1.png"},s="Linux VLAN Configuration",o={id:"linux-networking/Vlans",title:"Linux VLAN Configuration",description:"Within this document, we'll explore the setup of Linux bridging and VLANs to",source:"@site/docs/2-linux-networking/2-Vlans.md",sourceDirName:"2-linux-networking",slug:"/linux-networking/Vlans",permalink:"/linux-networking/Vlans",draft:!1,unlisted:!1,editUrl:"https://github.com/okda-networks/docs_source/tree/main/docs/2-linux-networking/2-Vlans.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"VLANs",title:"Linux VLAN Configuration",image:"/img/topology1.png"},sidebar:"tutorialSidebar",previous:{title:"Link Aggregation (Bonding)",permalink:"/linux-networking/Link-Agg"},next:{title:"VRFs",permalink:"/linux-networking/vrf"}},c={},u=[{value:"Topology:",id:"topology",level:2},{value:"Configuration:",id:"configuration",level:2},{value:"Requirements",id:"requirements",level:3},{value:"Access Port Configuration:",id:"access-port-configuration",level:3},{value:"Trunk Prot Configuration:",id:"trunk-prot-configuration",level:3},{value:"Inter VLAN Routing Configuration:",id:"inter-vlan-routing-configuration",level:3},{value:"Full configuration:",id:"full-configuration",level:3}];function p(n){const e={admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h1,{id:"linux-vlan-configuration",children:"Linux VLAN Configuration"}),"\n",(0,a.jsx)(e.p,{children:"Within this document, we'll explore the setup of Linux bridging and VLANs to\nachieve layer two isolation. Additionally, we'll delve into inter-VLAN routing, facilitating communication across\ndistinct VLANs."}),"\n",(0,a.jsx)(e.h2,{id:"topology",children:"Topology:"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"topology",src:i(8253).A+"",width:"792",height:"397"})}),"\n",(0,a.jsx)(e.h2,{id:"configuration",children:"Configuration:"}),"\n",(0,a.jsx)(e.p,{children:"the configuration here will cover dent-1 config only."}),"\n",(0,a.jsx)(e.h3,{id:"requirements",children:"Requirements"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["Configure ",(0,a.jsx)(e.code,{children:"enp0s11"})," as access VLAN 10 on ",(0,a.jsx)(e.code,{children:"dent-1"})," and ",(0,a.jsx)(e.code,{children:"dent-2"}),"."]}),"\n",(0,a.jsxs)(e.li,{children:["Configure ",(0,a.jsx)(e.code,{children:"enp0s12"})," as access VLAN 20 on ",(0,a.jsx)(e.code,{children:"dent-1"}),"."]}),"\n",(0,a.jsxs)(e.li,{children:["Configure ",(0,a.jsx)(e.code,{children:"enp0s4"})," and ",(0,a.jsx)(e.code,{children:"enp0s5"})," links as trunk links with VLAN 10 and 20 allowed and tagged on ",(0,a.jsx)(e.code,{children:"dent-1"}),"."]}),"\n",(0,a.jsxs)(e.li,{children:["Configure ",(0,a.jsx)(e.code,{children:"enp0s4"})," and ",(0,a.jsx)(e.code,{children:"enp0s5"})," links as trunk links with VLAN 10 and 20 allowed and tagged on ",(0,a.jsx)(e.code,{children:"dent-2"}),"."]}),"\n",(0,a.jsxs)(e.li,{children:["Create interface VLAN10 (SVI) on ",(0,a.jsx)(e.code,{children:"dent-1"})," with IP address 192.168.10.1/24."]}),"\n",(0,a.jsxs)(e.li,{children:["Create interface VLAN20 (SVI) on ",(0,a.jsx)(e.code,{children:"dent-1"})," with IP address 192.168.20.1/24."]}),"\n",(0,a.jsxs)(e.li,{children:["Create interface VLAN10 (SVI) on ",(0,a.jsx)(e.code,{children:"dent-2"})," with IP address 192.168.10.2/24."]}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"access-port-configuration",children:"Access Port Configuration:"}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsxs)(e.li,{children:["create bridge ",(0,a.jsx)(e.code,{children:"br1"})," with ",(0,a.jsx)(e.code,{children:"vlan_filter"})," and ",(0,a.jsx)(e.code,{children:"stp_state"})," enabled."]}),"\n"]}),"\n","\n",(0,a.jsxs)(t.A,{children:[(0,a.jsx)(d.A,{value:"onmcli",label:"ONM-CLI",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"dent-1(config)# links-iproute2\ndent-1(config-links-iproute2)# bridge br1\ndent-1(config-bridge[name='br1'])# admin-status up\ndent-1(config-bridge[name='br1'])# br-info vlan_filtering 1\ndent-1(config-bridge[name='br1'])# br-info stp_state 1\n"})})}),(0,a.jsx)(d.A,{value:"iproute2",label:"IPROUTE2",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"ip link add name br1 type bridge stp_state 1 vlan_filtering 1\nip link set br1 up\n"})})}),(0,a.jsx)(d.A,{value:"netconf",label:"NETCONF",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-xml",children:'\n<links xmlns="urn:okda:iproute2:ip:link" xmlns:yang="urn:ietf:params:xml:ns:yang:1">\n    <bridge>\n        <name>br1</name>\n        <br-info>\n            <stp_state>1</stp_state>\n            <vlan_filtering>1</vlan_filtering>\n        </br-info>\n    </bridge>\n</links>\n'})})})]}),"\n",(0,a.jsx)(e.admonition,{type:"warning",children:(0,a.jsxs)(e.p,{children:["By default, ",(0,a.jsx)(e.code,{children:"STP"})," is disabled on the bridge.\nSince we have redundancy links, we need to enable it."]})}),"\n",(0,a.jsxs)(e.ol,{start:"2",children:["\n",(0,a.jsxs)(e.li,{children:["add ",(0,a.jsx)(e.code,{children:"enp0s11"})," and ",(0,a.jsx)(e.code,{children:"enp0s12"})," to bridge ",(0,a.jsx)(e.code,{children:"br1"})," using master argument. and\nadd their respective vlans as ",(0,a.jsx)(e.code,{children:"untagged"})," and ",(0,a.jsx)(e.code,{children:"pvid"})]}),"\n"]}),"\n",(0,a.jsxs)(t.A,{children:[(0,a.jsx)(d.A,{value:"onmcli",label:"ONM-CLI",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"dent-1(config-links-iproute2)# link enp0s11\ndent-1(config-[name='enp0s11'])# master br1\ndent-1(config-[name='enp0s11'])# bridge-conf vlan 10\ndent-1(config-vlan[vid='10'])# pvid true\ndent-1(config-vlan[vid='10'])# untagged true\ndent-1(config-vlan[vid='10'])# exit\ndent-1(config-[name='enp0s11'])# exit\ndent-1(config-links-iproute2)# link enp0s12\ndent-1(config-[name='enp0s12'])# master br1\ndent-1(config-[name='enp0s12'])# bridge-conf vlan 20\ndent-1(config-vlan[vid='20'])# pvid true\ndent-1(config-vlan[vid='20'])# untagged true\ndent-1(config-vlan[vid='20'])# commit\n"})})}),(0,a.jsx)(d.A,{value:"iproute2",label:"IPROUTE2",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"ip link set name enp0s11 master br1 up\nip link set name enp0s12 master br1 up\nbridge vlan add vid 20 dev enp0s12 pvid untagged\nbridge vlan add vid 10 dev enp0s11 pvid untagged\n"})})}),(0,a.jsx)(d.A,{value:"netconf",label:"NETCONF",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-xml",children:'\n<links xmlns="urn:okda:iproute2:ip:link" xmlns:yang="urn:ietf:params:xml:ns:yang:1">\n    <link>\n        <name>enp0s11</name>\n        <master>br1</master>\n        <bridge-conf>\n            <vlan>\n                <vid>10</vid>\n                <pvid>true</pvid>\n                <untagged>true</untagged>\n            </vlan>\n        </bridge-conf>\n    </link>\n    <link>\n        <name>enp0s12</name>\n        <master>br1</master>\n        <bridge-conf>\n            <vlan>\n                <vid>20</vid>\n                <pvid>true</pvid>\n                <untagged>true</untagged>\n            </vlan>\n        </bridge-conf>\n    </link>\n</links>\n'})})})]}),"\n",(0,a.jsx)(e.admonition,{type:"info",children:(0,a.jsxs)(e.p,{children:["The ",(0,a.jsx)(e.code,{children:"PVID"})," option indicates that any incoming traffic\nfrom this link will be placed in the specified VLAN.\nThe ",(0,a.jsx)(e.code,{children:"untagged"})," option indicates that all egress traffic on this\ninterface will be untagged. Both options are equivalent to\nCisco's ",(0,a.jsx)(e.code,{children:"switchport mode access"})," command."]})}),"\n",(0,a.jsx)(e.blockquote,{children:"\n"}),"\n",(0,a.jsx)(e.h3,{id:"trunk-prot-configuration",children:"Trunk Prot Configuration:"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["add ",(0,a.jsx)(e.code,{children:"enp0s4"})," and ",(0,a.jsx)(e.code,{children:"enp0s5"})," to bridge ",(0,a.jsx)(e.code,{children:"br1"}),", then add VLAN 10 and 20 to them as tagged VLANs"]}),"\n"]}),"\n",(0,a.jsxs)(t.A,{children:[(0,a.jsx)(d.A,{value:"onmcli",label:"ONM-CLI",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"dent-1(config-links-iproute2)# link enp0s4\ndent-1(config-[name='enp0s4'])# admin-status up\ndent-1(config-[name='enp0s4'])# master br1\ndent-1(config-[name='enp0s4'])# bridge-conf vlan 10\ndent-1(config-vlan[vid='10'])# exit\ndent-1(config-[name='enp0s4'])# bridge-conf vlan 20\ndent-1(config-vlan[vid='20'])# exit\ndent-1(config-[name='enp0s4'])# exit\ndent-1(config-links-iproute2)# link enp0s5\ndent-1(config-[name='enp0s5'])# admin-status up\ndent-1(config-[name='enp0s5'])# master br1\ndent-1(config-[name='enp0s5'])# bridge-conf vlan 10\ndent-1(config-vlan[vid='10'])# exit\ndent-1(config-[name='enp0s5'])# bridge-conf vlan 20\ndent-1(config-vlan[vid='20'])# commit\n"})})}),(0,a.jsx)(d.A,{value:"iproute2",label:"IPROUTE2",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"ip link set name enp0s4 up master br1 up\nip link set name enp0s5 up master br1 up\nbridge vlan add vid 10 dev enp0s4\nbridge vlan add vid 20 dev enp0s4\n"})})}),(0,a.jsx)(d.A,{value:"netconf",label:"NETCONF",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-xml",children:'\n<links xmlns="urn:okda:iproute2:ip:link" xmlns:yang="urn:ietf:params:xml:ns:yang:1">\n    <link>\n        <name>enp0s4</name>\n        <admin-status>up</admin-status>\n        <master>br1</master>\n        <bridge-conf>\n            <vlan>\n                <vid>10</vid>\n            </vlan>\n            <vlan>\n                <vid>20</vid>\n            </vlan>\n        </bridge-conf>\n    </link>\n    <link>\n        <name>enp0s5</name>\n        <admin-status>up</admin-status>\n        <master>br1</master>\n        <bridge-conf>\n            <vlan>\n                <vid>10</vid>\n            </vlan>\n            <vlan>\n                <vid>20</vid>\n            </vlan>\n        </bridge-conf>\n    </link>\n</links>\n'})})})]}),"\n",(0,a.jsx)(e.admonition,{type:"info",children:(0,a.jsxs)(e.p,{children:["With trunk ports, we simply add the VLANs to the ports without\nspecifying ",(0,a.jsx)(e.code,{children:"PVID"})," or ",(0,a.jsx)(e.code,{children:"untagged"}),". This is equivalent to Cisco's\n",(0,a.jsx)(e.code,{children:"switchport trunk allowed vlan 10,20"})," command."]})}),"\n",(0,a.jsx)(e.blockquote,{children:"\n"}),"\n",(0,a.jsx)(e.h3,{id:"inter-vlan-routing-configuration",children:"Inter VLAN Routing Configuration:"}),"\n",(0,a.jsxs)(e.p,{children:["to allow access between ",(0,a.jsx)(e.code,{children:"PC1"})," and ",(0,a.jsx)(e.code,{children:"PC2"}),", we need to enable inter-vlan routing between VLAN10 and VLAN20."]}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["create ",(0,a.jsx)(e.code,{children:"br1.10"})," and ",(0,a.jsx)(e.code,{children:"br2.20"})," VLAN interfaces, assign ips to them, then add VLAN 10 and 20 to bridge ",(0,a.jsx)(e.code,{children:"br1"})," link."]}),"\n"]}),"\n",(0,a.jsxs)(t.A,{children:[(0,a.jsx)(d.A,{value:"onmcli",label:"ONM-CLI",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"dent-1# conf t\ndent-1(config)# links-iproute2\ndent-1(config-links-iproute2)# vlan br1.10\ndent-1(config-[name='br1.10'])# device br1\ndent-1(config-[name='br1.10'])# vlan-info id 10\ndent-1(config-[name='br1.10'])# admin-status up\ndent-1(config-[name='br1.10'])# ip 192.168.10.10/24\ndent-1(config-[name='br1.10'])# exit\ndent-1(config-links-iproute2)# vlan br1.20\ndent-1(config-[name='br1.20'])# device br1\ndent-1(config-[name='br1.20'])# vlan-info id 20\ndent-1(config-[name='br1.20'])# admin-status up\ndent-1(config-[name='br1.20'])# ip 192.168.20.10/24\ndent-1(config-[name='br1.20'])# exit\ndent-1(config-links-iproute2)# bridge br1\ndent-1(config-bridge[name='br1'])# bridge-conf vlan 10\ndent-1(config-vlan[vid='10'])# self true\ndent-1(config-vlan[vid='10'])# exit\ndent-1(config-bridge[name='br1'])# bridge-conf vlan 20\ndent-1(config-vlan[vid='20'])# self true\ndent-1(config-vlan[vid='20'])# commit\n"})})}),(0,a.jsx)(d.A,{value:"iproute2",label:"IPROUTE2",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"ip link add name br1.10 up link br1 type vlan protocol 802.1q id 10\nip address add 192.168.10.10/24 dev br1.10\nip link add name br1.20 up link br1 type vlan protocol 802.1q id 20\nip address add 192.168.20.10/24 dev br1.20\nbridge vlan add vid 10 dev br1 self \nbridge vlan add vid 20 dev br1 self \n"})})}),(0,a.jsx)(d.A,{value:"netconf",label:"NETCONF",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-xml",children:'\n<links xmlns="urn:okda:iproute2:ip:link" xmlns:yang="urn:ietf:params:xml:ns:yang:1">\n    <vlan>\n        <name>br1.10</name>\n        <admin-status>up</admin-status>\n        <device>br1</device>\n        <ip>\n            <address>192.168.10.10/24</address>\n        </ip>\n        <vlan-info>\n            <id>10</id>\n        </vlan-info>\n    </vlan>\n    <vlan>\n        <name>br1.20</name>\n        <admin-status>up</admin-status>\n        <device>br1</device>\n        <ip>\n            <address>192.168.20.10/24</address>\n        </ip>\n        <vlan-info>\n            <id>20</id>\n        </vlan-info>\n    </vlan>\n    <bridge>\n        <name>br1</name>\n        <bridge-conf>\n            <vlan>\n                <vid>10</vid>\n                <self>true</self>\n            </vlan>\n            <vlan>\n                <vid>20</vid>\n                <self>true</self>\n            </vlan>\n        </bridge-conf>\n    </bridge>\n</links>\n'})})})]}),"\n",(0,a.jsx)(e.h3,{id:"full-configuration",children:"Full configuration:"}),"\n",(0,a.jsxs)(t.A,{children:[(0,a.jsx)(d.A,{value:"onmcli",label:"ONM-CLI",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"link enp0s4 \n  admin-status up\n  master br1\n  bridge-conf vlan 10\n  bridge-conf vlan 20\nlink enp0s5\n  admin-status up\n  master br1\n  bridge-conf vlan 10\n  bridge-conf vlan 20\nbridge br1\n  admin-status up\n  bridge-conf vlan 10 \n    self true\n  bridge-conf vlan 20 \n    self true\n  br-info stp_state 1\n  br-info vlan_filtering 1\nvlan br1.10 \n  admin-status up\n  device br1\n  ip 192.168.10.10/24 \n  vlan-info id 10\nvlan br1.20 \n  admin-status up\n  device br1\n  ip 192.168.20.10/24 \n  vlan-info id 20\n"})})}),(0,a.jsx)(d.A,{value:"iproute2",label:"IPROUTE2",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"ip link add name br1 type bridge stp_state 1 vlan_filtering 1 up\nip link add name br1.10 up link br1 type vlan protocol 802.1q id 10\nip link add name br1.20 up link br1 type vlan protocol 802.1q id 20\nip link set name enp0s4 up master br1\nip link set name enp0s5 up master br1\nip link set name enp0s11 master br1 up\nip link set name enp0s12 master br1 up\nip address add 192.168.10.10/24 dev br1.10\nip address add 192.168.20.10/24 dev br1.20\nbridge vlan add vid 10 dev enp0s4\nbridge vlan add vid 20 dev enp0s4\nbridge vlan add vid 20 dev enp0s12 pvid untagged\nbridge vlan add vid 10 dev enp0s11 pvid untagged\nbridge vlan add vid 10 dev br1 self \nbridge vlan add vid 20 dev br1 self \n"})})}),(0,a.jsx)(d.A,{value:"netconf",label:"NETCONF",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-xml",children:'\n<rpc message-id="101" xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">\n    <edit-config>\n        <target>\n            <running/>\n        </target>\n        <config xmlns:nc="urn:ietf:params:xml:ns:netconf:base:1.0">\n            <links xmlns="urn:okda:iproute2:ip:link" xmlns:yang="urn:ietf:params:xml:ns:yang:1">\n                <link>\n                    <name>enp0s4</name>\n                    <admin-status>up</admin-status>\n                    <master>br1</master>\n                    <bridge>\n                        <vlan>\n                            <vid>10</vid>\n                        </vlan>\n                        <vlan>\n                            <vid>20</vid>\n                        </vlan>\n                    </bridge>\n                </link>\n                <link>\n                    <name>enp0s5</name>\n                    <admin-status>up</admin-status>\n                    <master>br1</master>\n                    <bridge>\n                        <vlan>\n                            <vid>10</vid>\n                        </vlan>\n                        <vlan>\n                            <vid>20</vid>\n                        </vlan>\n                    </bridge>\n                </link>\n                <link>\n                    <name>enp0s11</name>\n                    <master>br1</master>\n                    <bridge>\n                        <vlan>\n                            <vid>10</vid>\n                            <pvid>true</pvid>\n                            <untagged>true</untagged>\n                        </vlan>\n                    </bridge>\n                </link>\n                <link>\n                    <name>enp0s12</name>\n                    <master>br1</master>\n                    <bridge>\n                        <vlan>\n                            <vid>20</vid>\n                            <pvid>true</pvid>\n                            <untagged>true</untagged>\n                        </vlan>\n                    </bridge>\n                </link>\n                <bridge>\n                    <name>br1</name>\n                    <br-info>\n                        <stp_state>1</stp_state>\n                        <vlan_filtering>1</vlan_filtering>\n                    </br-info>\n                    <bridge-conf>\n                        <vlan>\n                            <vid>10</vid>\n                            <self>true</self>\n                        </vlan>\n                        <vlan>\n                            <vid>20</vid>\n                            <self>true</self>\n                        </vlan>\n                    </bridge-conf>\n                </bridge>\n                <vlan>\n                    <name>br1.10</name>\n                    <admin-status>up</admin-status>\n                    <device>br1</device>\n                    <ip>\n                        <address>192.168.10.10/24</address>\n                    </ip>\n                    <vlan-info>\n                        <id>10</id>\n                    </vlan-info>\n                </vlan>\n                <vlan>\n                    <name>br1.20</name>\n                    <admin-status>up</admin-status>\n                    <device>br1</device>\n                    <ip>\n                        <address>192.168.20.10/24</address>\n                    </ip>\n                    <vlan-info>\n                        <id>20</id>\n                    </vlan-info>\n                </vlan>\n            </links>\n        </config>\n    </edit-config>\n</rpc>\n'})})})]})]})}function g(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(p,{...n})}):p(n)}},9365:(n,e,i)=>{i.d(e,{A:()=>d});i(6540);var a=i(4164);const r={tabItem:"tabItem_Ymn6"};var t=i(4848);function d(n){let{children:e,hidden:i,className:d}=n;return(0,t.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,d),hidden:i,children:e})}},1470:(n,e,i)=>{i.d(e,{A:()=>A});var a=i(6540),r=i(4164),t=i(3104),d=i(6347),l=i(205),s=i(7485),o=i(1682),c=i(679);function u(n){return a.Children.toArray(n).filter((n=>"\n"!==n)).map((n=>{if(!n||(0,a.isValidElement)(n)&&function(n){const{props:e}=n;return!!e&&"object"==typeof e&&"value"in e}(n))return n;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof n.type?n.type:n.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(n){const{values:e,children:i}=n;return(0,a.useMemo)((()=>{const n=e??function(n){return u(n).map((n=>{let{props:{value:e,label:i,attributes:a,default:r}}=n;return{value:e,label:i,attributes:a,default:r}}))}(i);return function(n){const e=(0,o.X)(n,((n,e)=>n.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((n=>n.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(n),n}),[e,i])}function g(n){let{value:e,tabValues:i}=n;return i.some((n=>n.value===e))}function v(n){let{queryString:e=!1,groupId:i}=n;const r=(0,d.W6)(),t=function(n){let{queryString:e=!1,groupId:i}=n;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return i??null}({queryString:e,groupId:i});return[(0,s.aZ)(t),(0,a.useCallback)((n=>{if(!t)return;const e=new URLSearchParams(r.location.search);e.set(t,n),r.replace({...r.location,search:e.toString()})}),[t,r])]}function m(n){const{defaultValue:e,queryString:i=!1,groupId:r}=n,t=p(n),[d,s]=(0,a.useState)((()=>function(n){let{defaultValue:e,tabValues:i}=n;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!g({value:e,tabValues:i}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${i.map((n=>n.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const a=i.find((n=>n.default))??i[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:e,tabValues:t}))),[o,u]=v({queryString:i,groupId:r}),[m,f]=function(n){let{groupId:e}=n;const i=function(n){return n?`docusaurus.tab.${n}`:null}(e),[r,t]=(0,c.Dv)(i);return[r,(0,a.useCallback)((n=>{i&&t.set(n)}),[i,t])]}({groupId:r}),b=(()=>{const n=o??m;return g({value:n,tabValues:t})?n:null})();(0,l.A)((()=>{b&&s(b)}),[b]);return{selectedValue:d,selectValue:(0,a.useCallback)((n=>{if(!g({value:n,tabValues:t}))throw new Error(`Can't select invalid tab value=${n}`);s(n),u(n),f(n)}),[u,f,t]),tabValues:t}}var f=i(2303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var h=i(4848);function x(n){let{className:e,block:i,selectedValue:a,selectValue:d,tabValues:l}=n;const s=[],{blockElementScrollPositionUntilNextRender:o}=(0,t.a_)(),c=n=>{const e=n.currentTarget,i=s.indexOf(e),r=l[i].value;r!==a&&(o(e),d(r))},u=n=>{let e=null;switch(n.key){case"Enter":c(n);break;case"ArrowRight":{const i=s.indexOf(n.currentTarget)+1;e=s[i]??s[0];break}case"ArrowLeft":{const i=s.indexOf(n.currentTarget)-1;e=s[i]??s[s.length-1];break}}e?.focus()};return(0,h.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":i},e),children:l.map((n=>{let{value:e,label:i,attributes:t}=n;return(0,h.jsx)("li",{role:"tab",tabIndex:a===e?0:-1,"aria-selected":a===e,ref:n=>s.push(n),onKeyDown:u,onClick:c,...t,className:(0,r.A)("tabs__item",b.tabItem,t?.className,{"tabs__item--active":a===e}),children:i??e},e)}))})}function j(n){let{lazy:e,children:i,selectedValue:r}=n;const t=(Array.isArray(i)?i:[i]).filter(Boolean);if(e){const n=t.find((n=>n.props.value===r));return n?(0,a.cloneElement)(n,{className:"margin-top--md"}):null}return(0,h.jsx)("div",{className:"margin-top--md",children:t.map(((n,e)=>(0,a.cloneElement)(n,{key:e,hidden:n.props.value!==r})))})}function k(n){const e=m(n);return(0,h.jsxs)("div",{className:(0,r.A)("tabs-container",b.tabList),children:[(0,h.jsx)(x,{...e,...n}),(0,h.jsx)(j,{...e,...n})]})}function A(n){const e=(0,f.A)();return(0,h.jsx)(k,{...n,children:u(n.children)},String(e))}},8253:(n,e,i)=>{i.d(e,{A:()=>a});const a=i.p+"assets/images/topology1-e0ae9a34dbb4f5c0c6d3573b46930f10.png"},8453:(n,e,i)=>{i.d(e,{R:()=>d,x:()=>l});var a=i(6540);const r={},t=a.createContext(r);function d(n){const e=a.useContext(t);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:d(n.components),a.createElement(t.Provider,{value:e},n.children)}}}]);